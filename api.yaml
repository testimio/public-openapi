openapi: 3.0.0
info:
  description: "Testim.io Public API for branches and tests"
  version: "1.0.0"
  title: "Testim.io Public API"
  contact:
      email: "support@testim.io"
servers:
  - url: 'https://api.testim.io'
paths:
    /branches:
      post:
        summary: Creates a new branch
        description: Forks source branch into a new branch
        tags:
          - Branches
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourceBranch:
                    description: The name of the branch to fork
                    example: master
                    type: string
                  newBranch:
                    description: The name of the new (target) branch
                    example: feature-234_login_form
                    type: string
                required:  
                  - sourceBranch
                  - newBranch
        responses:
          '200':
            description: Created
            content:
                application/json:
                  schema:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name given in the request's newBranch field
                      created_at:
                         $ref: '#/components/schemas/created_at'
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '409':
            $ref: '#/components/responses/BranchAlreadyExists'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

      get:
        summary: List branches
        description: List all project branches
        tags:
          - Branches
        responses:
          '200':
            description: List
            content:
                application/json:
                  schema:
                    type: object
                    properties:
                      branches:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Branch name
                            created_at:
                              $ref: '#/components/schemas/created_at'
                            modified_at:
                              $ref: '#/components/schemas/modified_at'
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /branches/merge:
      put:
        summary: Merge branches
        description: Merge source into target branch
        tags:
          - Branches
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetBranch:
                    description: The name of the branch to merge into
                    example: feature-234_login_form
                    type: string
                  sourceBranch:
                    description: The name of the branch to merge from
                    example: master
                    type: string
                  forceMerge:
                    description: Whether to use heuristics to solve conflicts.
                    type: boolean
                required:  
                  - sourceBranch
                  - targetBranch    
        responses:
          '200':
            description: Merged
            content:
                application/json:
                  schema:
                    type: object
                    properties:
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '404':
            $ref: '#/components/responses/BranchDoesNotExist'
          '405':
            $ref: '#/components/responses/BranchMergeError'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /branches/{branch}:
      delete:
        summary: Delete the given branch
        tags:
          - Branches
        parameters:
          - in: path
            name: branch
            required: true
            schema:
              description: The name of the branch to delete
              example: 'CMPNY-23_fix_signin_form'
              type: string
        responses:
          '200':
            description: Deleted
            content:
                application/json:
                  schema:
                    type: object
                    properties:
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '404':
            $ref: '#/components/responses/BranchDoesNotExist'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /tests:
      get:
        summary: List tests
        description: "List the test names and IDs of a given branch"
        tags:
          - Tests
        parameters:
        - name: branch
          in: query
          required: false
          description: The name of branch to list tests of.
          example: 'CMPNY-23_fix_signin_form'
          schema:
            type : string
            default: master
        responses:
          '200':
            description: Test list
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      tests:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Test name
                            _id:
                              type: string
                              description: Test ID
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'
            
    /tests/search:
      get:
        summary: Get tests by name
        description: "List the ID and link of tests matching the given name"
        tags:
          - Tests
        parameters:
        - name: name
          in: query
          required: true
          description: The name of test to search.
          example: 'test'
          schema:
            type : string
        responses:
          '200':
            description: Test list
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      tests:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Test ID
                            link:
                              type: string
                              description: Link to open test in Testim editor
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /suites/search:
      get:
        summary: Get suites by name
        description: "List the ID and link of suites matching the given name"
        tags:
          - Suites
        parameters:
        - name: name
          in: query
          required: true
          description: The name of suites to search.
          example: 'suite'
          schema:
            type : string
        responses:
          '200':
            description: Suite list
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      suites:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Suite ID
                            link:
                              type: string
                              description: Link to open suite in Testim editor
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /test-plans/search:
      get:
        summary: Get test-plans by name
        description: "List the ID and link of test-plans matching the given name"
        tags:
          - Test plans
        parameters:
        - name: name
          in: query
          required: true
          description: The name of test-plans to search.
          example: 'plan'
          schema:
            type : string
        responses:
          '200':
            description: Test-plan list
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      testPlans:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Test-plan ID
                            link:
                              type: string
                              description: Link to open test-plan in Testim editor
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /runs/executions/{executionId}:
      get:
        summary: Get execution results
        description: Get the result of an execution, together with its failing tests, with a list of the failed steps of the test
        tags:
          - Executions
        parameters:
          - in: path
            name: executionId
            required: true
            schema:
              description: The ID of the execution to get details
              example: 'EXECUTION_ID'
              type: string
        responses:
          '200':
            description: Execution result
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      branch:
                        type: string
                        description: The branch of the tests executed
                        example: master
                      execution:
                        type: string
                        description: The name of the execution
                        example: remote-run
                      concurrency:
                        type: number
                        description: The amount of tests executed in parallel
                        example: 1
                      executionResult:
                        type: string
                        description: Wether the execution passed or failed
                        example: Failed
                      browser:
                        type: string
                        description: The name of the browser the tests were executed in
                        example: chrome
                      failedCount:
                        type: number
                        description: The amount of failed tests
                        example: 1
                      totalTests:
                        type: number
                        description: The amount of tests executed
                        example: 1
                      link:
                        type: string
                        description: A link to the execution result in Testim editor
                      turboMode:
                        type: boolean
                        description: Wether the execution used Testim's Turbo Mode or not
                      duration:
                        type: number
                        description: The amount of time (MS) the execution took
                      failedTests:
                        type: array
                        description: A list of the failed tests
                        items:
                          type: object
                          properties:
                            testName:
                              type: string
                              description: The name of the failed test
                            errorMessage:
                              type: string
                              description: The error message with test failure reason
                            executionResult:
                              type: string
                              description: Wether the execution passed or failed
                            link:
                              type: string
                              description: A link to the test result in Testim editor
                            failedSteps:
                              type: array
                              description: A list of the failed steps in the test
                              items:
                                type: object
                                properties:
                                  reason:
                                    type: string
                                    description: The reason the step failed
                                  name:
                                    type: string
                                    description: The name of the failing step
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '404':
            $ref: '#/components/responses/ExecutionDoesNotExist'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /runs/tests/{testResultId}:
      get:
        summary: Get test result
        description: Get the result of a test, together with all its steps. <br> To retrieve the run parameters as well, specify "runParams=true"
        tags:
          - Executions
        parameters:
          - in: path
            name: testResultId
            required: true
            schema:
              description: The ID of the result to get details
              example: 'RESULT_ID'
              type: string
          - in: query
            name: runParams
            schema:
              description: Retrieve the test's run parameters  
              example: false 
              type: boolean
          - in: query  
            name: stepsResults
            schema:
              description: Retrieve the test's steps results
              example: false 
              type: boolean
        responses:
          '200':
            description: Test result
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    testResult:
                      type: object
                      properties:
                        testName:
                          type: string
                          description: The name of the test
                        link:
                          type: string
                          description: Link to open test in Testim editor
                        branch:
                          type: string
                          description: The name of the branch to execute tests from
                        baseURL:
                          type: string
                        configuration:
                          type: string
                          description: The test configuration name
                        executionDate:
                          type: string
                          example: '2022-12-31'
                        executionTime:
                          type: string
                          example: '10:59:59'
                        turboMode: 
                          type: boolean
                        testResult:
                          type: string
                          description: Could be 'Passed' or 'Failed'
                          example: Passed
                        errorMessage:
                          type: string
                          description: Test result failure message
                        failureType:
                          type: string
                        runParams:
                          type: object
                        duration:
                          type: number
                          description: In seconds
                        testStatus:
                          type: string
                          description: e.g Draft, Evaluating, Active, Quarantine
                        browser:
                          type: string
                          example: chrome
                        owner:
                          type: string
                          example: rosie@testim.io
                          description: The owner user email
                        stepsResults:
                          type: array
                          items: 
                            type: object
                            properties:
                              name: 
                                type: string
                              type: 
                                type: string
                              treatAsWarning: 
                                type: boolean
                              description: 
                                type: string
                              sharedStep: 
                                type: boolean
                              duration: 
                                type: string
                                description: In seconds
                              status: 
                                type: string
                                description: Could be 'Passed' or 'Failed'
                                example: Passed
                              errorMessage:
                                type: string
                              tabURL: 
                                type: string
                              screenshot: 
                                type: string
                              path: 
                                type: array
                                items: 
                                  type: string
                    metaData:
                      $ref: '#/components/schemas/metaData'

          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '404':
            $ref: '#/components/responses/TestResultDoesNotExist'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /tests/run/{testId}:
      post:
        summary: Execute test remotely
        tags:
          - Tests
        requestBody:
          $ref: '#/components/requestBodies/ExecuteParameters'
        parameters:
          - in: path
            name: testId
            required: true
            schema:
              description: The ID of the test to execute
              example: 'TEST_ID'
              type: string
        responses:
          '200':
            description: Execution result
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      executionId:
                        type: string
                        description: The ID of the new execution
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /suites/run/{suiteId}:
      post:
        summary: Execute suites remotely
        tags:
          - Suites
        requestBody:
          $ref: '#/components/requestBodies/ExecuteParameters'
        parameters:
          - in: path
            name: suiteId
            required: true
            schema:
              description: The ID of the suite to execute
              example: 'SUITE_ID'
              type: string
        responses:
          '200':
            description: Execution result
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      executionId:
                        type: string
                        description: The ID of the new execution
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /labels/run/{label}:
      post:
        summary: Execute labels remotely
        tags:
          - Labels
        requestBody:
          $ref: '#/components/requestBodies/ExecuteParameters'
        parameters:
          - in: path
            name: label
            required: true
            schema:
              description: The name of the label to execute
              example: 'LABEL'
              type: string
        responses:
          '200':
            description: Execution result
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      executionId:
                        type: string
                        description: The ID of the new execution
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

    /test-plans/run/{planId}:
      post:
        summary: Execute test plans remotely
        tags:
          - Test plans
        requestBody:
          description: A JSON object containing the execution setup information.
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  branch:
                    description: The name of the branch to execute tests from
                    default: master
                    type: string
                  parallel:
                    description: The amount of tests to execute concurrently.
                    default: 1
                    type: number
                  params:
                    description: A JSON object (or stringified object) of parameters to add to the execution.
                    oneOf:
                      - type: string
                      - type: object
                  resultLabels:
                    description: Labels to append to the execution result
                    type: array
                    items:
                      type: string
                  retries:
                      description: The amount of retries to allow per test.
                      type: number
                  timeout:
                      description: The amount of seconds before a test will timeout.
                      default: 600
                      type: number
                  turboMode:
                      description: Wether to execute using Turbo Mode or not.
                      default: false
                      type: boolean
        parameters:
          - in: path
            name: planId
            required: true
            schema:
              description: The ID of the test plan to execute
              example: 'PLAN_ID'
              type: string
        responses:
          '200':
            description: Execution result
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      executionId:
                        type: string
                        description: The ID of the new execution
                      metaData:
                        $ref: '#/components/schemas/metaData'
          '400':
            $ref: '#/components/responses/InvalidOrMissingProperty'
          '401':
            $ref: '#/components/responses/InvalidApiKey'
          '403':
            $ref: '#/components/responses/ApiKeyInsufficientPermissions'
          '429':
            $ref: '#/components/responses/TooManyRequests'

tags:
  - name: Branches
    description: List, create, delete and merge branches
  - name: Tests
    description: List tests by branch, search by test name, and execute tests
  - name: Test plans
    description: Search test plans by name, and execute test plans
  - name: Suites
    description: Search suites by name, and execute suites
  - name: Labels
    description: Execute labels
  - name: Executions
    description: Get execution results

security:
  - apiKeyAuth: []

components:
  requestBodies:
    ExecuteParameters:
      description: A JSON object containing the execution setup information.<br>Must provide a Grid or Grid ID.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              baseUrl:
                description: An optional URL to use instead of default base URL.
                example: http://demo.com/
                type: string
              branch:
                description: The name of the branch to execute tests from
                default: master
                type: string
              grid:
                description: The name of grid to use for execution.
                type: string
              gridId:
                description: The ID of grid to use for execution.
                type: string
              parallel:
                description: The amount of tests to execute concurrently.
                default: 1
                type: number
              params:
                description: A JSON object (or stringified object) of parameters to add to the execution.
                oneOf:
                  - type: string
                  - type: object
              resultLabels:
                description: Labels to append to the execution result
                type: array
                items:
                  type: string
              retries:
                  description: The amount of retries to allow per test.
                  type: number
              testConfig:
                description: The name of test config to use for execution.
                type: string
              testConfigId:
                description: The ID of test config to use for execution.
                type: string
              timeout:
                  description: The amount of seconds before a test will timeout.
                  default: 600
                  type: number
              turboMode:
                  description: Wether to execute using Turbo Mode or not.
                  default: false
                  type: boolean
  responses:
    # Errors
    BranchAlreadyExists:
      description: A resource with that name already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidOrMissingProperty:
      description: A required property is either missing or it's value is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BranchDoesNotExist:
      description: Specified branch does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BranchMergeError:
      description: Merge failed due to conflicts (forceMerge disabled)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidApiKey:
      description: 'Issue authenticating request: missing or invalid API Key'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ApiKeyInsufficientPermissions:
      description: 'API key does not have suffiecient permission to make the request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: 'Project or API key rate limiting has been reached'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ExecutionDoesNotExist:
      description: Specified execution ID does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TestResultDoesNotExist:
      description: Specified test result ID does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    # requestId attached to all requests and responses
    requestId:
      type: string
      example: 'RQ-HykKrXuMxrp47BRbdWWO-41ed477e-4052-4904-ab98-034f6285e60e'
    # A root level object returned with all success responses
    metaData:
      type: object
      properties:
        requestId:
          $ref: '#/components/schemas/requestId'
      required:
        - requestId
    # Date resource was created at
    created_at:
      type: string
      example: "2020-10-13T16:52:47.571Z"
    # Date resource was modified at
    modified_at:
      type: string
      example: "2020-10-19T17:43:51.997Z"
    # Schema for error response body
    Error:
      type: object
      properties:
        requestId:
          $ref: '#/components/schemas/requestId'
        error:
          type: object
          properties:
            message:
                type: string
            status:
                type: number
                example: 400
          required: 
            - status
            - message
      required: 
        - string
        - error
  
  securitySchemes:
      apiKeyAuth:
        type: http
        scheme: bearer
        bearerFormat: PAK-[RANDOM_KEY]
